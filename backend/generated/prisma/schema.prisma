generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categorias_despesas {
  id        Int        @id @default(autoincrement())
  nome      String     @db.VarChar(50)
  descricao String?
  icone     String?    @db.VarChar(50)
  despesas  despesas[]
}

model categorias_receitas {
  id        Int        @id @default(autoincrement())
  nome      String     @db.VarChar(50)
  descricao String?
  icone     String?    @db.VarChar(50)
  receitas  receitas[]
}

model despesas {
  id                  Int                  @id @default(autoincrement())
  usuario_id          Int?
  categoria_id        Int?
  valor               Decimal              @db.Decimal(15, 2)
  data                DateTime             @db.Date
  descricao           String?
  data_criacao        DateTime?            @default(now()) @db.Timestamp(6)
  categorias_despesas categorias_despesas? @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuarios            usuarios?            @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model despesas_compartilhadas {
  id                    Int                    @id @default(autoincrement())
  grupo_id              Int?
  nome                  String                 @db.VarChar(100)
  valor                 Decimal                @db.Decimal(15, 2)
  pago_por              Int?
  data                  DateTime               @db.Date
  tipo_divisao          String                 @db.VarChar(20)
  data_criacao          DateTime?              @default(now()) @db.Timestamp(6)
  grupos_compartilhados grupos_compartilhados? @relation(fields: [grupo_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  membros_grupo         membros_grupo?         @relation(fields: [pago_por], references: [id], onDelete: NoAction, onUpdate: NoAction)
  divisao_despesas      divisao_despesas[]
}

model dividas {
  id               Int       @id @default(autoincrement())
  usuario_id       Int?
  nome             String    @db.VarChar(100)
  valor_total      Decimal   @db.Decimal(15, 2)
  valor_pago       Decimal?  @default(0) @db.Decimal(15, 2)
  taxa_juros       Decimal?  @db.Decimal(6, 2)
  data_vencimento  DateTime? @db.Date
  parcelas         Int?
  valor_parcela    Decimal?  @db.Decimal(15, 2)
  descricao        String?
  data_criacao     DateTime? @default(now()) @db.Timestamp(6)
  data_atualizacao DateTime? @default(now()) @db.Timestamp(6)
  usuarios         usuarios? @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model divisao_despesas {
  id                      Int                      @id @default(autoincrement())
  despesa_id              Int?
  membro_id               Int?
  valor                   Decimal                  @db.Decimal(15, 2)
  pago                    Boolean?                 @default(false)
  data_pagamento          DateTime?                @db.Date
  despesas_compartilhadas despesas_compartilhadas? @relation(fields: [despesa_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  membros_grupo           membros_grupo?           @relation(fields: [membro_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([despesa_id, membro_id])
}

model grupos_compartilhados {
  id                      Int                       @id @default(autoincrement())
  nome                    String                    @db.VarChar(100)
  tipo                    String                    @db.VarChar(50)
  data_criacao            DateTime?                 @default(now()) @db.Timestamp(6)
  despesas_compartilhadas despesas_compartilhadas[]
  membros_grupo           membros_grupo[]
}

model investimentos {
  id                  Int                  @id @default(autoincrement())
  usuario_id          Int?
  tipo_id             Int?
  nome                String               @db.VarChar(100)
  valor               Decimal              @db.Decimal(15, 2)
  taxa_retorno        Decimal?             @db.Decimal(6, 2)
  data_inicio         DateTime             @db.Date
  data_vencimento     DateTime?            @db.Date
  descricao           String?
  data_criacao        DateTime?            @default(now()) @db.Timestamp(6)
  data_atualizacao    DateTime?            @default(now()) @db.Timestamp(6)
  tipos_investimentos tipos_investimentos? @relation(fields: [tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuarios            usuarios?            @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model membros_grupo {
  id                      Int                       @id @default(autoincrement())
  grupo_id                Int?
  usuario_id              Int?
  nome                    String                    @db.VarChar(100)
  iniciais                String?                   @db.VarChar(10)
  avatar_url              String?
  data_criacao            DateTime?                 @default(now()) @db.Timestamp(6)
  despesas_compartilhadas despesas_compartilhadas[]
  divisao_despesas        divisao_despesas[]
  grupos_compartilhados   grupos_compartilhados?    @relation(fields: [grupo_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios                usuarios?                 @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([grupo_id, usuario_id])
}

model metas_financeiras {
  id               Int       @id @default(autoincrement())
  usuario_id       Int?
  nome             String    @db.VarChar(100)
  descricao        String?
  valor_alvo       Decimal   @db.Decimal(15, 2)
  valor_atual      Decimal?  @default(0) @db.Decimal(15, 2)
  data_alvo        DateTime? @db.Date
  data_criacao     DateTime? @default(now()) @db.Timestamp(6)
  data_atualizacao DateTime? @default(now()) @db.Timestamp(6)
  usuarios         usuarios? @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model receitas {
  id                  Int                  @id @default(autoincrement())
  usuario_id          Int?
  categoria_id        Int?
  valor               Decimal              @db.Decimal(15, 2)
  data                DateTime             @db.Date
  descricao           String?
  data_criacao        DateTime?            @default(now()) @db.Timestamp(6)
  categorias_receitas categorias_receitas? @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuarios            usuarios?            @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model relatorios {
  id           Int       @id @default(autoincrement())
  usuario_id   Int?
  nome         String    @db.VarChar(100)
  tipo         String    @db.VarChar(50)
  periodo      String    @db.VarChar(50)
  data_inicio  DateTime? @db.Date
  data_fim     DateTime? @db.Date
  data_criacao DateTime? @default(now()) @db.Timestamp(6)
  usuarios     usuarios? @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model tipos_investimentos {
  id            Int             @id @default(autoincrement())
  nome          String          @db.VarChar(50)
  descricao     String?
  investimentos investimentos[]
}

model usuarios {
  id                Int                 @id @default(autoincrement())
  nome              String              @db.VarChar(100)
  email             String              @unique @db.VarChar(100)
  telefone          String?             @db.VarChar(20)
  senha_hash        String              @db.VarChar(255)
  data_criacao      DateTime?           @default(now()) @db.Timestamp(6)
  data_atualizacao  DateTime?           @default(now()) @db.Timestamp(6)
  despesas          despesas[]
  dividas           dividas[]
  investimentos     investimentos[]
  membros_grupo     membros_grupo[]
  metas_financeiras metas_financeiras[]
  receitas          receitas[]
  relatorios        relatorios[]
}
